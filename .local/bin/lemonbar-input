#!/bin/bash

source $HOME/.cache/wal/colors.sh

red="#993333"

# FIXME: single-monitor only
parse_wm_report() {
    buffer=""

    IFS=":"
    report=($1)
    unset ifs

    for i in "${!report[@]}"; do
	case "${report[$i]}" in
	    [OF]*) # focused
		buffer="${buffer}${i} "
		;;
	    o*) # occupied
		buffer="${buffer}%{F${color2}}${i}%{F-} "
		;;
	    [Ff]*) # free
		buffer="${buffer}%{F${color8}}${i}%{F-} "
		;;
	    [Uu]*) # urgent
		buffer="${buffer}%{F${red}}${i}%{F-} "
		;;
	esac
    done

    echo "${buffer}"
}

get_music() {
    title=$(playerctl metadata title)
    artist=$(playerctl metadata artist)
    buffer="${title} - ${artist} "

    status=$(playerctl status)
    if [[ "${status}" == "Playing" ]]; then
	buffer="${buffer}"
    elif [[ "${status}" == "Paused" ]]; then
	buffer="${buffer}"
    fi

    echo "${buffer}"
}

get_date() {
    date '+%b %-d %-I:%M'
}

get_battery() {
    BATC=/sys/class/power_supply/BAT1/capacity
    BATS=/sys/class/power_supply/BAT1/status
    icons=("" "" "" "" "")

    status=$(sed -n p ${BATS})
    capacity=$(sed -n p ${BATC})

    buffer="${capacity}%"

    # Display red if low battery and not charging
    if [[ $status != "Charging" && $capacity -lt 15 ]]; then
	buffer="${buffer}%{F${red}}"
    # Display secondary colour if not charging
    elif [[ $status != "Charging" && $capacity -lt 100 ]]; then
	buffer="${buffer}%{F${color2}}"
    fi

    if [[ $capacity -lt 10 ]]; then
	buffer="${buffer} ${icons[0]}"
    elif [[ $capacity -lt 30 ]]; then
	buffer="${buffer} ${icons[1]}"
    elif [[ $capacity -lt 60 ]]; then
	buffer="${buffer} ${icons[2]}"
    elif [[ $capacity -lt 90 ]]; then
	buffer="${buffer} ${icons[3]}"
    else
	buffer="${buffer} ${icons[4]}"
    fi
    buffer="${buffer}%{F-}"

    echo "${buffer}"
}

get_wifi() {
    ssid=$(iw dev wlp2s0 link | grep SSID | sed 's/.*: //')
    if [[ -z $ssid ]]; then
	echo "%{F${color2}}×%{F-}"
    else
	echo " ${ssid}"
    fi
}

get_volume() {
    sound_info=($(amixer -D pulse get Master | sed -n "s/.*\[\(.*\)%\].*\[\(.*\)\].*/\1 \2/p" | uniq))
    if [[ "${sound_info[1]}" == "off" ]]; then
       echo "%{F${color2}}×%{F-}"
    else
       echo " ${sound_info[0]}%"
    fi
}

while read -r input; do
    case $input in
    W*)
	wm_display=$(parse_wm_report "${input}")
	;;
    M*)
	music_display=$(get_music)
	;;
    C*) # clock signal
	date_display=$(get_date)
	battery_display=$(get_battery)
	wifi_display=$(get_wifi)
	volume_display=$(get_volume)

	if [[ -z $(playerctl -l) ]]; then
	    music_display=""
	fi
	;;
    esac
    echo " ${wm_display}%{c}${music_display}%{r}${date_display}  ${wifi_display}  ${volume_display}  ${battery_display} "
done
