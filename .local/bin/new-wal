#!/usr/bin/env bash

source ${HOME}/.cache/wal/colors.sh

# Choose a random new wallpaper from wallpaper directory
new_bg=$(ls -d ${HOME}/.local/share/img/* | grep -v $wallpaper | shuf -n 1)

# Tag the currently focused window so that compton won't make it transparent
# when feh opens.
# This prevents a flicker when refocusing after feh is killed.
curr_window_id=$(xprop -root _NET_ACTIVE_WINDOW | awk '{ print $5 }')
xprop -id ${curr_window_id} -f FORCE_OPAQUE 32a -set FORCE_OPAQUE FORCE_OPAQUE

# Hackily "stop repainting" by taking a screenshot
# and displaying it full screen. This reduces flickering
# and syncs up all the distinct theme updates at the cost
# of apparent system lag.
scrot -z /tmp/wal-scrot.png
bspc rule -a feh -o state=fullscreen
feh /tmp/wal-scrot.png &
feh_pid=($!)

# Determine the new colour scheme
# and repaint shell, gtk2, polybar, emacs, dunst, etc.
wal -n -i ${new_bg} -o ${HOME}/.local/bin/wal-set &
pids+=($!)

# Set wallpaper
feh --bg-fill ${new_bg} &
pids+=($!)

# Wait for colour scheme and wallpaper to be set
wait ${pids[@]}

# Reload lemonbar (last thing, because it's so quick)
pkill -f lemonbar
lemonbar-run &

# "Repaint screen"
kill $feh_pid

# Untag window
xprop -id ${curr_window_id} -remove FORCE_OPAQUE
